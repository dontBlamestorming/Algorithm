/*
    도입
    현실 세계의 규칙을 '추상화'하는 추상화 자료구조의 대표적인 예로 큐(queue)와 스택(stack), 데크(dequeue)가 있다. 
    이들은 '일렬로' 늘어선 자료들을 표현하는 자료 구조로, 여기에 자료를 넣고 꺼내는 연산을 지원한다. 이때 '넣고', '꺼내는' 
    작업에 일정한 규칙이 있다. 이러한 것들이 중요한 이유는 흔히 사용하는 구조에 대해 이름을 붙였다는데에 있다. 개발자 간의
    의사소통이 더 쉬워지고, 더 큰 그림을 보며 프로그램을 설계할 수 있다. 이 세가지 구조들을 구분하는 중요한 기준은 일자로 
    늘어진 형태들의 어느방향에서 자료를 넣고 뺄 수 있는지다.

    큐(queue)
    - 한쪽 끝에서 자료를 넣고 반대 쪽 끝에서 자료를 꺼낼 수 있다. 따라서 선입선출(FIFO, first in first out)이라고도 부른다.
      놀이공원이나 음식점에서 선 줄, 할일의 목록 등을 큐로 표현할 수 있다.
    
    스택(stack)
    - 한쪽 끝에서만 자료를 넣고 뺄 수 있다. 후입선출(LIFO, last in first out)이라고도 부른다. 이는 전산한 전반에 걸쳐 사용된다.
      하나의 함수가 종료되면 그 이전함수로 돌아가야 한다. 따라서 내부적으로 stack을 사용하여 함수들의 context를 관리한다.

    데크(dequeue)
    - 양쪽 끝에서 자료들을 넣고 뺄 수 있는 자료구조이다. 따라서 이를 이용하여 stack과 queue를 모두 구현할 수 있다.

    자료구조에 자료를 넣은 것을 푸시(push), 그리고 꺼내는 작업을 팝(pop)이라고 한다. 큐와 스택은 각각의 방향에 따라 푸쉬와 팝을,
    데크는 처음과 끝쪽 모두 푸시와 팝 연산을 지원한다. 이들 연산은 모두 상수 시간(O(1))에 이루어져야 한다. 
    
*/
